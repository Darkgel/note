公众号授权给第三方平台
https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&t=resource/res_list&verify=1&id=open1453779503&token=&lang=zh_CN



微信服务器每隔10分钟会向第三方的消息接收地址推送一次component_verify_ticket

component_appid + component_appsecret + component_verify_ticket 换取 component_access_token

component_access_token + component_appid 换取 pre_auth_code

component_access_token + component_appid 通过公众号运营者同意授权后换取 authorizer_access_token & authorizer_refresh_token

authorizer_refresh_token 换取（过期后） authorizer_access_token（新的）   

重点：完成授权后，第三方平台可通过公众号的接口调用凭据（authorizer_access_token）来代替它调用接口

authorizer_access_token的作用类似于access_token,开发者拿到authorizer_access_token后就可以以公众号的名义调用微信服务器的接口（注意与compoment_access_token区分，那是属于第三方的统一token，而authorizer_access_token是代表相应公众号运营者的token）




1、推送component_verify_ticket协议
在第三方平台创建审核通过后，微信服务器会向其“授权事件接收URL”每隔10分钟定时推送component_verify_ticket。第三方平台方在收到ticket推送后也需进行解密（详见【消息加解密接入指引】），接收到后必须直接返回字符串success。
获得：component_verify_ticket

2、获取第三方平台component_access_token
compoment_access_token是第三方平台的接口调用凭据，也叫做令牌。每个令牌是存在有效期（2小时）的，且令牌的调用不是无限制的，请第三方平台做好令牌的管理，在令牌快过期时（比如1小时50分）再进行刷新。
	接口调用请求说明
	http请求方式: POST（请使用https协议） 
	https://api.weixin.qq.com/cgi-bin/component/api_component_token
	POST数据示例:
		{
			"component_appid":"appid_value" ,
			"component_appsecret": "appsecret_value", 
			"component_verify_ticket": "ticket_value" 
		}
	获得：component_access_token

3、获取预授权码pre_auth_code
该API用于获取预授权码。预授权码用于公众号授权时的第三方平台方安全验证。
	接口调用请求说明
	http请求方式: POST（请使用https协议）
	https://api.weixin.qq.com/cgi-bin/component/api_create_preauthcode?component_access_token=xxx
	POST数据示例:
		{
			"component_appid":"appid_value" 
		}
	获得：pre_auth_code

4、使用授权码换取公众号的接口调用凭据和授权信息
该API用于使用授权码换取授权公众号的授权信息，并换取authorizer_access_token和authorizer_refresh_token。 授权码的获取，需要在用户在第三方平台授权页中完成授权流程后，在回调URI中通过URL参数提供给第三方平台方。
请注意，由于现在公众号可以自定义选择部分权限授权给第三方平台，因此第三方平台开发者需要通过该接口来获取公众号具体授权了哪些权限，而不是简单地认为自己声明的权限就是公众号授权的权限。
	接口调用请求说明
	http请求方式: POST（请使用https协议）
	https://api.weixin.qq.com/cgi-bin/component/api_query_auth?component_access_token=xxxx
	POST数据示例:
	{
		"component_appid":"appid_value" ,
		"authorization_code": "auth_code_value"
	}
	获得：authorizer_appid，authorizer_access_token，authorizer_refresh_token以及公众号的权限列表


5、获取（刷新）授权公众号的接口调用凭据（令牌）
该API用于在authorizer_access_token失效时，可用authorizer_refresh_token获取新的令牌。
请注意，此处token是2小时刷新一次，开发者需要自行进行token的缓存，避免token的获取次数达到每日的限定额度。
缓存方法可以参考：http://mp.weixin.qq.com/wiki/2/88b2bf1265a707c031e51f26ca5e6512.html
	接口调用请求说明
	http请求方式: POST（请使用https协议）
	https:// api.weixin.qq.com /cgi-bin/component/api_authorizer_token?component_access_token=xxxxx
	POST数据示例:
	{
		"component_appid":"appid_value",
		"authorizer_appid":"auth_appid_value",
		"authorizer_refresh_token":"refresh_token_value",
	}
	获得：authorizer_access_token 和 authorizer_refresh_token

6、获取授权方的公众号帐号基本信息
该API用于获取授权方的公众号基本信息，包括头像、昵称、帐号类型、认证类型、微信号、原始ID和二维码图片URL。
需要特别记录授权方的帐号类型，在消息及事件推送时，对于不具备客服接口的公众号，需要在5秒内立即响应；而若有客服接口，则可以选择暂时不响应，而选择后续通过客服接口来发送消息触达粉丝。
	接口调用请求说明
	http请求方式: POST（请使用https协议）
	https://api.weixin.qq.com/cgi-bin/component/api_get_authorizer_info?component_access_token=xxxx
	POST数据示例:
	{
		"component_appid":"appid_value" ,
		"authorizer_appid": "auth_appid_value" 
	}
	返回：公众号帐号基本信息


7、获取授权方的选项设置信息
该API用于获取授权方的公众号的选项设置信息，如：地理位置上报，语音识别开关，多客服开关。注意，获取各项选项设置信息，需要有授权方的授权，详见权限集说明。
	接口调用请求说明
	http请求方式: POST（请使用https协议）
	https://api.weixin.qq.com/cgi-bin/component/ api_get_authorizer_option?component_access_token=xxxx
	POST数据示例
	{
		"component_appid":"appid_value",
		"authorizer_appid": " auth_appid_value ",
		"option_name": "option_name_value"
	}
	返回：选项的具体信息

8、设置授权方的选项信息
该API用于设置授权方的公众号的选项信息，如：地理位置上报，语音识别开关，多客服开关。注意，设置各项选项设置信息，需要有授权方的授权，详见权限集说明。
	接口调用请求说明
	http请求方式: POST（请使用https协议）
	https://api.weixin.qq.com/cgi-bin/component/ api_set_authorizer_option?component_access_token=xxxx
	POST数据示例
	{
		"component_appid":"appid_value",
		"authorizer_appid": " auth_appid_value ",
		"option_name": "option_name_value",
		"option_value":"option_value_value"
	}

9、推送授权相关通知
当公众号对第三方平台进行授权、取消授权、更新授权后，微信服务器会向第三方平台方的授权事件接收URL（创建第三方平台时填写）推送相关通知。
推送数据是xml格式的数据
第三方平台方在收到授权相关通知后也需进行解密（详细请见【消息加解密接入指引】），接收到后之后只需直接返回字符串success。