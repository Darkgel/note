2017/2/27
获取acess_token
	http请求方式: GET
	https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=APPID&secret=APPSECRET
	正常返回json：
		{"access_token":"ACCESS_TOKEN","expires_in":7200}
	access_token的存储至少要保留512个字符空间。access_token的有效期目前为2个小时，需定时刷新，重复获取将导致上次获取的access_token失效。（每天的调用次数有限制）

获取微信服务器IP地址	
	http请求方式: GET
	https://api.weixin.qq.com/cgi-bin/getcallbackip?access_token=ACCESS_TOKEN
	正常返回：
		{	
			"ip_list":["127.0.0.1","127.0.0.1"]
		}



2017/2/28
微信服务器在五秒内收不到响应会断掉连接，并且重新发起请求，总共重试三次。假如服务器无法保证在五秒内处理并回复，可以直接回复空串，微信服务器不会对此作任何处理，并且不会发起重试。
如果第三方不使用中控服务器，而是选择各个业务逻辑点各自去刷新access_token，那么就可能会产生冲突，导致服务不稳定。

接受消息：（各种资源可以通过相应的id下载）
	接收普通消息：
		当普通微信用户向公众账号发消息时，微信服务器将POST消息的XML数据包发到开发者填写的URL上。
		关于重试的消息排重，推荐使用msgid排重。
		1 文本消息				<MsgType><![CDATA[text]]></MsgType>
		2 图片消息				<MsgType><![CDATA[image]]></MsgType>
		3 语音消息				<MsgType><![CDATA[voice]]></MsgType>（开通语音识别后可以让微信识别语音并转成文字）
		4 视频消息				<MsgType><![CDATA[video]]></MsgType>
		5 小视频消息				<MsgType><![CDATA[shortvideo]]></MsgType>
		6 地理位置消息			<MsgType><![CDATA[location]]></MsgType>
		7 链接消息				<MsgType><![CDATA[link]]></MsgType>

	接收事件推送：
		​用户的某些操作会使得微信服务器通过事件推送的形式（post请求）通知到开发者在开发者中心处设置的服务器地址，从而开发者可以获取到该信息。其中，某些事件推送在发生后，是允许开发者回复用户的，某些则不允许。
		类型（xml）	<MsgType><![CDATA[event]]></MsgType>
		关于重试的消息排重，推荐使用FromUserName + CreateTime 排重。
		1 关注/取消关注事件											
			<Event><![CDATA[subscribe(或者unsubscribe)]]></Event>
		2 扫描带参数二维码事件
			1. 用户未关注时，进行关注后的事件推送		
				<Event><![CDATA[subscribe]]></Event>
				<EventKey><![CDATA[qrscene_123123]]></EventKey>
				<Ticket><![CDATA[TICKET]]></Ticket>
			2. 用户已关注时的事件推送
				<Event><![CDATA[SCAN]]></Event>
				<EventKey><![CDATA[SCENE_VALUE]]></EventKey>
				<Ticket><![CDATA[TICKET]]></Ticket>
		3 上报地理位置事件
			<Event><![CDATA[LOCATION]]></Event>
		4 自定义菜单事件（点击菜单弹出子菜单，不会产生上报。）
			1 点击菜单拉取消息时的事件推送
				<Event><![CDATA[CLICK]]></Event>
				<EventKey><![CDATA[EVENTKEY]]></EventKey>
			2 点击菜单跳转链接时的事件推送
				<Event><![CDATA[VIEW]]></Event>
				<EventKey><![CDATA[www.qq.com]]></EventKey>



发送消息：
	被动回复用户消息：
		关于重试的消息排重，有msgid的消息推荐使用msgid排重。事件类型消息推荐使用FromUserName + CreateTime 排重。
		微信服务器在将用户的消息发给公众号的开发者服务器地址后，微信服务器在五秒内收不到响应会断掉连接，并且重新发起请求，总共重试三次。
		假如服务器无法保证在五秒内处理并回复，必须做出下述回复，这样微信服务器才不会对此作任何处理，并且不会发起重试（这种情况下，可以使用客服消息接口进行异步回复），否则，将出现严重的错误提示。详见下面说明：
			1、直接回复success（推荐方式）
			2、直接回复空串（指字节长度为0的空字符串，而不是XML结构体中content字段的内容为空）
		请注意，回复图片等多媒体消息时需要预先通过素材管理接口上传临时素材到微信服务器，可以使用素材管理中的临时素材，也可以使用永久素材。

		各消息类型需要的XML数据包结构如下：
		1 回复文本消息
			<MsgType><![CDATA[text]]></MsgType>
			<Content><![CDATA[你好]]></Content>
		2 回复图片消息
			<MsgType><![CDATA[image]]></MsgType>
			<Image>
				<MediaId><![CDATA[media_id]]></MediaId>
			</Image>
		3 回复语音消息
			<MsgType><![CDATA[voice]]></MsgType>
			<Voice>
				<MediaId><![CDATA[media_id]]></MediaId>
			</Voice>
		4 回复视频消息
			<MsgType><![CDATA[video]]></MsgType>
			<Video>
				<MediaId><![CDATA[media_id]]></MediaId>
				<Title><![CDATA[title]]></Title>
				<Description><![CDATA[description]]></Description>
			</Video> 
		5 回复音乐消息
			<MsgType><![CDATA[music]]></MsgType>
			<Music>
				<Title><![CDATA[TITLE]]></Title>
				<Description><![CDATA[DESCRIPTION]]></Description>
				<MusicUrl><![CDATA[MUSIC_Url]]></MusicUrl>
				<HQMusicUrl><![CDATA[HQ_MUSIC_Url]]></HQMusicUrl>
				<ThumbMediaId><![CDATA[media_id]]></ThumbMediaId>
			</Music>
		6 回复图文消息
			<MsgType><![CDATA[news]]></MsgType>
			<ArticleCount>2</ArticleCount>
			<Articles>
				<item>
					<Title><![CDATA[title1]]></Title> 
					<Description><![CDATA[description1]]></Description>
					<PicUrl><![CDATA[picurl]]></PicUrl>
					<Url><![CDATA[url]]></Url>
				</item>
				<item>
					<Title><![CDATA[title]]></Title>
					<Description><![CDATA[description]]></Description>
					<PicUrl><![CDATA[picurl]]></PicUrl>
					<Url><![CDATA[url]]></Url>
				</item>
			</Articles>

	客服接口：
		当用户主动发消息给公众号的时候（包括发送信息、点击自定义菜单、订阅事件、扫描二维码事件、支付成功事件、用户维权），微信将会把消息数据推送给开发者，开发者在一段时间内（目前修改为48小时）可以调用客服消息接口，通过POST一个JSON数据包来发送消息给普通用户，在48小时内不限制发送次数。
		请开发者注意，本接口中所有使用到media_id的地方，现在都可以使用素材管理中的永久素材media_id了。

		1 客服帐号管理
			1.1 添加客服帐号
				http请求方式: POST
				https://api.weixin.qq.com/customservice/kfaccount/add?access_token=ACCESS_TOKEN
				post数据：
					{
					     "kf_account" : "test1@test",
					     "nickname" : "客服1",
					     "password" : "pswmd5",
					}
			1.2 修改客服帐号
				http请求方式: POST
				https://api.weixin.qq.com/customservice/kfaccount/update?access_token=ACCESS_TOKEN
				post数据：
				{
				     "kf_account" : "test1@test",
				     "nickname" : "客服1",
				     "password" : "pswmd5",
				}
			1.3 删除客服帐号
				http请求方式: GET
				https://api.weixin.qq.com/customservice/kfaccount/del?access_token=ACCESS_TOKEN
				post数据：
				{
				     "kf_account" : "test1@test",
				     "nickname" : "客服1",
				     "password" : "pswmd5",
				}
			1.4 设置客服帐号的头像
				http请求方式: POST/FORM
				http://api.weixin.qq.com/customservice/kfaccount/uploadheadimg?access_token=ACCESS_TOKEN&kf_account=KFACCOUNT
				调用示例：使用curl命令，用FORM表单方式上传一个多媒体文件，curl命令的具体用法请自行了解
			1.5 获取所有客服账号
				http请求方式: GET
				https://api.weixin.qq.com/cgi-bin/customservice/getkflist?access_token=ACCESS_TOKEN
			1.6 接口的统一参数说明
		2 客服接口-发消息
			http请求方式: POST
			https://api.weixin.qq.com/cgi-bin/message/custom/send?access_token=ACCESS_TOKEN
			各种消息的格式：
			发送文本消息
			{
			    "touser":"OPENID",
			    "msgtype":"text",
			    "text":
			    {
			         "content":"Hello World"
			    }
			}

			发送图片消息
			{
			    "touser":"OPENID",
			    "msgtype":"image",
			    "image":
			    {
			      "media_id":"MEDIA_ID"
			    }
			}

			发送语音消息
			{
			    "touser":"OPENID",
			    "msgtype":"voice",
			    "voice":
			    {
			      "media_id":"MEDIA_ID"
			    }
			}

			发送视频消息
			{
			    "touser":"OPENID",
			    "msgtype":"video",
			    "video":
			    {
			      "media_id":"MEDIA_ID",
			      "thumb_media_id":"MEDIA_ID",
			      "title":"TITLE",
			      "description":"DESCRIPTION"
			    }
			}

			发送音乐消息
			{
			    "touser":"OPENID",
			    "msgtype":"music",
			    "music":
			    {
			      "title":"MUSIC_TITLE",
			      "description":"MUSIC_DESCRIPTION",
			      "musicurl":"MUSIC_URL",
			      "hqmusicurl":"HQ_MUSIC_URL",
			      "thumb_media_id":"THUMB_MEDIA_ID" 
			    }
			}

			发送图文消息 图文消息条数限制在10条以内，注意，如果图文数超过10，则将会无响应。
			{
			    "touser":"OPENID",
			    "msgtype":"news",
			    "news":{
			        "articles": [
				         {
				             "title":"Happy Day",
				             "description":"Is Really A Happy Day",
				             "url":"URL",
				             "picurl":"PIC_URL"
				         },
				         {
				             "title":"Happy Day",
				             "description":"Is Really A Happy Day",
				             "url":"URL",
				             "picurl":"PIC_URL"
				         }
			         ]
			    }
			}

			发送卡券
			{
			  "touser":"OPENID", 
			  "msgtype":"wxcard",
			  "wxcard":{              
			           "card_id":"123dsdajkasd231jhksad",
			           "card_ext": "{\"code\":\"\",\"openid\":\"\",\"timestamp\":\"1402057159\",\"signature\":\"017bb17407c8e0058a66d72dcc61632b70f511ad\"}"            
			            },
			}

			请注意，如果需要以某个客服帐号来发消息（在微信6.0.2及以上版本中显示自定义头像），则需在JSON数据包的后半部分加入customservice参数，例如发送文本消息则改为：
			{
			    "touser":"OPENID",
			    "msgtype":"text",
			    "text":
			    {
			         "content":"Hello World"
			    },
			    "customservice":
			    {
			         "kf_account": "test1@kftest"
			    }
			}

	高级群发接口：
		群发图文消息的过程如下：
			1、首先，预先将图文消息中需要用到的图片，使用上传图文消息内图片接口，上传成功并获得图片URL
			2、上传图文消息素材，需要用到图片时，请使用上一步获取的图片URL
			3、使用对用户分组的群发，或对OpenID列表的群发，将图文消息群发出去
			4、在上述过程中，如果需要，还可以预览图文消息、查询群发状态，或删除已群发的消息等

		群发图片、文本等其他消息类型的过程如下：
			1、如果是群发文本消息，则直接根据下面的接口说明进行群发即可
			2、如果是群发图片、视频等消息，则需要预先通过素材管理接口准备好mediaID

		使用is_to_all为true且成功群发，会使得此次群发进入历史消息列表。
		设置is_to_all为false时是可以多次群发的，但每个用户只会收到最多4条，且这些群发不会进入历史消息列表。

		1 上传图文消息内的图片获取URL(有大小和格式限制)
			http请求方式: POST
			https://api.weixin.qq.com/cgi-bin/media/uploadimg?access_token=ACCESS_TOKEN
			调用示例（使用curl命令，用FORM表单方式上传一个图片）：
			curl -F media=@test.jpg "https://api.weixin.qq.com/cgi-bin/media/uploadimg?access_token=ACCESS_TOKEN"
			成功后返回图片的额url地址（json）
		2 上传图文消息素材
			http请求方式: POST
			https://api.weixin.qq.com/cgi-bin/media/uploadnews?access_token=ACCESS_TOKEN
			post数据：
			{
			   "articles": [
					 {
                        "thumb_media_id":"qI6_Ze_6PtV7svjolgs-rN6stStuHIjs9_DidOHaj0Q-mwvBelOXCFZiq2OsIU-p",
                        "author":"xxx",
						"title":"Happy Day",
						"content_source_url":"www.qq.com",
						"content":"content",
						"digest":"digest",
			            "show_cover_pic":"1"
					 },
					 {
                        "thumb_media_id":"qI6_Ze_6PtV7svjolgs-rN6stStuHIjs9_DidOHaj0Q-mwvBelOXCFZiq2OsIU-p",
                        "author":"xxx",
						"title":"Happy Day",
						"content_source_url":"www.qq.com",
						"content":"content",
						"digest":"digest",
			            "show_cover_pic":"0"
					 }
			   ]
			}
			成功后返回media_id
		3 根据分组进行群发
			http请求方式: POST
			https://api.weixin.qq.com/cgi-bin/message/mass/sendall?access_token=ACCESS_TOKEN
			
			post数据：
				图文消息（注意图文消息的media_id需要通过上述方法来得到）：
				{
				   "filter":{
				      "is_to_all":false
				      "group_id":"2"
				   },
				   "mpnews":{
				      "media_id":"123dsdajkasd231jhksad"
				   },
				    "msgtype":"mpnews"
				}

				文本：
				{
				   "filter":{
				      "is_to_all":false
				      "group_id":"2"
				   },
				   "text":{
				      "content":"CONTENT"
				   },
				    "msgtype":"text"
				}
				
				语音（注意此处media_id需通过基础支持中的上传下载多媒体文件来得到）：
				{
				   "filter":{
				      "is_to_all":false
				      "group_id":"2"
				   },
				   "voice":{
				      "media_id":"123dsdajkasd231jhksad"
				   },
				    "msgtype":"voice"
				}
				
				图片（注意此处media_id需通过基础支持中的上传下载多媒体文件来得到）：
				{
				   "filter":{
				      "is_to_all":false
				      "group_id":"2"
				   },
				   "image":{
				      "media_id":"123dsdajkasd231jhksad"
				   },
				    "msgtype":"image"
				}

				视频
					请注意，此处视频的media_id需通过POST请求到下述接口特别地得到： https://file.api.weixin.qq.com/cgi-bin/media/uploadvideo?access_token=ACCESS_TOKEN POST数据如下（此处media_id需通过基础支持中的上传下载多媒体文件来得到）：
						{
						  "media_id": "rF4UdIMfYK3efUfyoddYRMU50zMiRmmt_l0kszupYh_SzrcW5Gaheq05p_lHuOTQ",
						  "title": "TITLE",
						  "description": "Description"
						}
					返回将为
						{
						  "type":"video",
						  "media_id":"IhdaAQXuvJtGzwwc0abfXnzeezfO0NgPK6AQYShD8RQYMTtfzbLdBIQkQziv2XJc",
						  "created_at":1398848981
						}
					然后，POST下述数据（将media_id改为上一步中得到的media_id），即可进行发送
						{
						   "filter":{
						      "is_to_all":false
						      "group_id":"2"
						   },
						   "mpvideo":{
						      "media_id":"IhdaAQXuvJtGzwwc0abfXnzeezfO0NgPK6AQYShD8RQYMTtfzbLdBIQkQziv2XJc",
						   },
						    "msgtype":"mpvideo"
						}
				
				卡券消息（注意图文消息的media_id需要通过上述方法来得到）：
				{
				   "filter":{
				      "is_to_all":false
				      "group_id":"2"
				   },
				  "wxcard":{              
				           "card_id":"123dsdajkasd231jhksad"         
				            },
				   "msgtype":"wxcard"
				}

				请注意，如果需要以某个客服帐号来发消息（在微信6.0.2及以上版本中显示自定义头像），则需在JSON数据包的后半部分加入customservice参数，例如发送文本消息则改为：
				{
				    "touser":"OPENID",
				    "msgtype":"text",
				    "text":
				    {
				         "content":"Hello World"
				    },
				    "customservice":
				    {
				         "kf_account": "test1@kftest"
				    }
				}
		4 根据OpenID列表群发【订阅号不可用，服务号认证后可用】
			http请求方式: POST
			https://api.weixin.qq.com/cgi-bin/message/mass/send?access_token=ACCESS_TOKEN
			post数据（其他数据也是类似吗，参考文档）：
			图文消息（注意图文消息的media_id需要通过上述方法来得到）：
			{
			   "touser":[
			    "OPENID1",
			    "OPENID2"
			   ],
			   "mpnews":{
			      "media_id":"123dsdajkasd231jhksad"
			   },
			    "msgtype":"mpnews"，
			    "send_ignore_reprint":0
			}
		5 删除群发
			删除群发消息只能删除图文消息和视频消息，其他类型的消息一经发送，无法删除。
			http请求方式: POST
			https://api.weixin.qq.com/cgi-bin/message/mass/delete?access_token=ACCESS_TOKEN
			post数据：
			{
			   "msg_id":30124
			}
		6 预览接口
			http请求方式: POST
			https://api.weixin.qq.com/cgi-bin/message/mass/preview?access_token=ACCESS_TOKEN
		7 查询群发消息发送状态
			http请求方式: POST
			https://api.weixin.qq.com/cgi-bin/message/mass/get?access_token=ACCESS_TOKEN
			POST数据示例如下：
			{
			   "msg_id": "201053012"
			}
		8 事件推送群发结果
			由于群发任务提交后，群发任务可能在一定时间后才完成，因此，群发接口调用时，仅会给出群发任务是否提交成功的提示，若群发任务提交成功，则在群发任务结束时，会向开发者在公众平台填写的开发者URL（callback URL）推送事件。
			<MsgType><![CDATA[event]]></MsgType>
			<Event><![CDATA[MASSSENDJOBFINISH]]></Event>

	模板消息接口：
		模板消息仅用于公众号向用户发送重要的服务通知，只能用于符合其要求的服务场景中，如信用卡刷卡通知，商品购买成功通知等。不支持广告等营销类消息以及其它所有可能对用户造成骚扰的消息。
		1 设置所属行业
			http请求方式: POST
			https://api.weixin.qq.com/cgi-bin/template/api_set_industry?access_token=ACCESS_TOKEN
			POST数据示例如下：
			    {
		          "industry_id1":"1",
		          "industry_id2":"4"
			    }
		2 获取设置的行业信息
			http请求方式：GET
			https://api.weixin.qq.com/cgi-bin/template/get_industry?access_token=ACCESS_TOKEN
			成功后返回json
		3 获得模板ID
			http请求方式: POST
			https://api.weixin.qq.com/cgi-bin/template/api_add_template?access_token=ACCESS_TOKEN
			POST数据示例如下：
			    {
		           "template_id_short":"TM00015"
		        }
		4 获取模板列表
			http请求方式：GET
			https://api.weixin.qq.com/cgi-bin/template/get_all_private_template?access_token=ACCESS_TOKEN
		5 删除模板
			http请求方式：POST
			https://api.weixin.qq.com/cgi-bin/template/del_private_template?access_token=ACCESS_TOKEN
			POST数据说明如下：
			 {
			     "template_id" : "Dyvp3-Ff0cnail_CDSzk1fIc6-9lOkxsQE7exTJbwUE"
			 }
		6 发送模板消息
			http请求方式: POST
			https://api.weixin.qq.com/cgi-bin/message/template/send?access_token=ACCESS_TOKEN
			POST数据示例如下：
		      {
		           "touser":"OPENID",
		           "template_id":"ngqIpbwh8bUfcSsECmogfXcV14J0tQlEpBO27izEYtY",
		           "url":"http://weixin.qq.com/download",            
		           "data":{
		                   "first": {
		                       "value":"恭喜你购买成功！",
		                       "color":"#173177"
		                   },
		                   "keynote1":{
		                       "value":"巧克力",
		                       "color":"#173177"
		                   },
		                   "keynote2": {
		                       "value":"39.8元",
		                       "color":"#173177"
		                   },
		                   "keynote3": {
		                       "value":"2014年9月22日",
		                       "color":"#173177"
		                   },
		                   "remark":{
		                       "value":"欢迎再次购买！",
		                       "color":"#173177"
		                   }
		           }
		       }
		7 事件推送
			在模版消息发送任务完成后，微信服务器会将是否送达成功作为通知，发送到开发者中心中填写的服务器配置地址中。
				1、送达成功时，推送的XML如下：
		           <xml>
		           <ToUserName><![CDATA[gh_7f083739789a]]></ToUserName>
		           <FromUserName><![CDATA[oia2TjuEGTNoeX76QEjQNrcURxG8]]></FromUserName>
		           <CreateTime>1395658920</CreateTime>
		           <MsgType><![CDATA[event]]></MsgType>
		           <Event><![CDATA[TEMPLATESENDJOBFINISH]]></Event>
		           <MsgID>200163836</MsgID>
		           <Status><![CDATA[success]]></Status>
		           </xml>
		       	2、送达由于用户拒收（用户设置拒绝接收公众号消息）而失败时，推送的XML如下：
		           <xml>
		           <ToUserName><![CDATA[gh_7f083739789a]]></ToUserName>
		           <FromUserName><![CDATA[oia2TjuEGTNoeX76QEjQNrcURxG8]]></FromUserName>
		           <CreateTime>1395658984</CreateTime>
		           <MsgType><![CDATA[event]]></MsgType>
		           <Event><![CDATA[TEMPLATESENDJOBFINISH]]></Event>
		           <MsgID>200163840</MsgID>
		           <Status><![CDATA[failed:user block]]></Status>
		           </xml>

	获取公众号的自动回复规则:
		本接口仅能获取公众号在公众平台官网的自动回复功能中设置的自动回复规则，若公众号自行开发实现自动回复，或通过第三方平台开发者来实现，则无法获取。
		http请求方式: GET（请使用https协议）
		https://api.weixin.qq.com/cgi-bin/get_current_autoreply_info?access_token=ACCESS_TOKEN



微信网页开发：
	微信网页授权
		具体而言，网页授权流程分为四步：
		1、引导用户进入授权页面同意授权，获取code
			https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&redirect_uri=REDIRECT_URI&response_type=code&scope=SCOPE&state=STATE#wechat_redirect 若提示“该链接无法访问”，请检查参数是否填写错误，是否拥有scope参数对应的授权作用域权限。 
			如果用户同意授权，页面将跳转至 redirect_uri/?code=CODE&state=STATE。 
		2、通过code换取网页授权access_token（与基础支持中的access_token不同） 
			获取code后，请求以下链接获取access_token：  
			https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&secret=SECRET&code=CODE&grant_type=authorization_code 
			正确时返回的JSON数据包如下：
			{ 
				 "access_token":"ACCESS_TOKEN",    
				 "expires_in":7200,    
				 "refresh_token":"REFRESH_TOKEN",    
				 "openid":"OPENID",    
				 "scope":"SCOPE" 
			} 
		3、如果需要，开发者可以刷新网页授权access_token，避免过期 
			获取第二步的refresh_token后，请求以下链接获取access_token：  
			https://api.weixin.qq.com/sns/oauth2/refresh_token?appid=APPID&grant_type=refresh_token&refresh_token=REFRESH_TOKEN 
		4、通过网页授权access_token和openid获取用户基本信息（支持UnionID机制） 
			如果网页授权作用域为snsapi_userinfo，则此时开发者可以通过access_token和openid拉取用户信息了。
			请求方法
			http：GET（请使用https协议） https://api.weixin.qq.com/sns/userinfo?access_token=ACCESS_TOKEN&openid=OPENID&lang=zh_CN 

		检验授权凭证（access_token）是否有效
		请求方法
		http：GET（请使用https协议） https://api.weixin.qq.com/sns/auth?access_token=ACCESS_TOKEN&openid=OPENID 
		根据返回的json可以判断



素材管理：
	新增临时素材
		http请求方式：POST/FORM，使用https
		https://api.weixin.qq.com/cgi-bin/media/upload?access_token=ACCESS_TOKEN&type=TYPE
		调用示例（使用curl命令，用FORM表单方式上传一个多媒体文件）：
		curl -F media=@test.jpg "https://api.weixin.qq.com/cgi-bin/media/upload?access_token=ACCESS_TOKEN&type=TYPE"
		正确情况下的返回JSON数据包结果如下：
		{"type":"TYPE","media_id":"MEDIA_ID","created_at":123456789}

	获取临时素材（请注意，视频文件不支持https下载，调用该接口需http协议。）
		http请求方式: GET,https调用
		https://api.weixin.qq.com/cgi-bin/media/get?access_token=ACCESS_TOKEN&media_id=MEDIA_ID
		请求示例（示例为通过curl命令获取多媒体文件）
		curl -I -G "https://api.weixin.qq.com/cgi-bin/media/get?access_token=ACCESS_TOKEN&media_id=MEDIA_ID"

		高清语音素材获取接口
		http请求方式: GET,https调用
		https://api.weixin.qq.com/cgi-bin/media/get/jssdk?access_token=ACCESS_TOKEN&media_id=MEDIA_ID
		请求示例（示例为通过curl命令获取多媒体文件）
		curl -I -G "https://api.weixin.qq.com/cgi-bin/media/get/jssdk?access_token=ACCESS_TOKEN&media_id=MEDIA_ID"

	新增永久图文素材
		http请求方式: POST，https协议
		https://api.weixin.qq.com/cgi-bin/material/add_news?access_token=ACCESS_TOKEN
		post数据
		{
		  "articles": [{
		       "title": TITLE,
		       "thumb_media_id": THUMB_MEDIA_ID,
		       "author": AUTHOR,
		       "digest": DIGEST,
		       "show_cover_pic": SHOW_COVER_PIC(0 / 1),
		       "content": CONTENT,
		       "content_source_url": CONTENT_SOURCE_URL
		    },
		    //若新增的是多图文素材，则此处应还有几段articles结构
		 ]
		}
		成功后返回media_id

		上传图文消息内的图片获取URL 
			http请求方式: POST，https协议
			https://api.weixin.qq.com/cgi-bin/media/uploadimg?access_token=ACCESS_TOKEN
			调用示例（使用curl命令，用FORM表单方式上传一个图片）：
			curl -F media=@test.jpg "https://api.weixin.qq.com/cgi-bin/media/uploadimg?access_token=ACCESS_TOKEN"
			成功后返回可用的url（json）

		新增其他类型永久素材
			通过POST表单来调用接口，表单id为media，包含需要上传的素材内容，有filename、filelength、content-type等信息。请注意：图片素材将进入公众平台官网素材管理模块中的默认分组。
			http请求方式: POST，需使用https
			https://api.weixin.qq.com/cgi-bin/material/add_material?access_token=ACCESS_TOKEN&type=TYPE
			调用示例（使用curl命令，用FORM表单方式新增一个其他类型的永久素材，curl命令的使用请自行查阅资料）

			新增永久视频素材需特别注意
			在上传视频素材时需要POST另一个表单，id为description，包含素材的描述信息，内容格式为JSON，格式如下：
			{
			 "title":VIDEO_TITLE,
			 "introduction":INTRODUCTION
			}
			新增永久视频素材的调用示例：
			curl "https://api.weixin.qq.com/cgi-bin/material/add_material?access_token=ACCESS_TOKEN&type=TYPE" -F media=@media.file -F  description='{"title":VIDEO_TITLE, "introduction":INTRODUCTION}'

	获取永久素材
		http请求方式: POST,https协议
		https://api.weixin.qq.com/cgi-bin/material/get_material?access_token=ACCESS_TOKEN
		调用示例
		{
			"media_id":MEDIA_ID
		}

	删除永久素材
		http请求方式: POST
		https://api.weixin.qq.com/cgi-bin/material/del_material?access_token=ACCESS_TOKEN
		调用示例
		{
			"media_id":MEDIA_ID
		}

	修改永久图文素材
		http请求方式: POST
		https://api.weixin.qq.com/cgi-bin/material/update_news?access_token=ACCESS_TOKEN
		调用示例
		{
		 "media_id":MEDIA_ID,
		 "index":INDEX,
		 "articles": {
		      "title": TITLE,
		      "thumb_media_id": THUMB_MEDIA_ID,
		      "author": AUTHOR,
		      "digest": DIGEST,
		      "show_cover_pic": SHOW_COVER_PIC(0 / 1),
		      "content": CONTENT,
		      "content_source_url": CONTENT_SOURCE_URL
		   }
		}

	获取素材总数
		http请求方式: GET
		https://api.weixin.qq.com/cgi-bin/material/get_materialcount?access_token=ACCESS_TOKEN
		返回说明
		{
			 "voice_count":COUNT,
			 "video_count":COUNT,
			 "image_count":COUNT,
			 "news_count":COUNT
		}

	获取素材列表
		http请求方式: POST
		https://api.weixin.qq.com/cgi-bin/material/batchget_material?access_token=ACCESS_TOKEN
		调用示例
		{
		   "type":TYPE,
		   "offset":OFFSET,
		   "count":COUNT
		}



用户管理：
	用户标签管理
		标签管理
			1. 创建标签
				http请求方式：POST（请使用https协议）
				https://api.weixin.qq.com/cgi-bin/tags/create?access_token=ACCESS_TOKEN
				POST数据格式：JSON
				POST数据例子：
				{
				  "tag" : {
				    "name" : "广东"//标签名
				  }
				}
			2. 获取公众号已创建的标签
				http请求方式：GET（请使用https协议）
				https://api.weixin.qq.com/cgi-bin/tags/get?access_token=ACCESS_TOKEN
				成功后返回标签数组（json）
			3. 编辑标签
				http请求方式：POST（请使用https协议）
				https://api.weixin.qq.com/cgi-bin/tags/update?access_token=ACCESS_TOKEN
				POST数据格式：JSON
				POST数据例子：
				{
				  "tag" : {
				    "id" : 134,
				    "name" : "广东人"
				  }
				}
			4. 删除标签
				http请求方式：POST（请使用https协议）
				https://api.weixin.qq.com/cgi-bin/tags/delete?access_token=ACCESS_TOKEN
				POST数据格式：JSON
				POST数据例子：
				{
				  "tag":{
				       "id" : 134
				  }
				}
			5. 获取标签下粉丝列表
				http请求方式：GET（请使用https协议）
				https://api.weixin.qq.com/cgi-bin/user/tag/get?access_token=ACCESS_TOKEN
				POST数据格式：JSON
				POST数据例子：
				{
				  "tagid" : 134,
				  "next_openid":""//第一个拉取的OPENID，不填默认从头开始拉取
				}

		用户管理
			1. 批量为用户打标签
				http请求方式：POST（请使用https协议）
				https://api.weixin.qq.com/cgi-bin/tags/members/batchtagging?access_token=ACCESS_TOKEN
				POST数据格式：JSON
				POST数据例子：
				{
				  "openid_list" : [//粉丝列表
				    "ocYxcuAEy30bX0NXmGn4ypqx3tI0",
				    "ocYxcuBt0mRugKZ7tGAHPnUaOW7Y"
				  ],
				  "tagid" : 134
				}
			2. 批量为用户取消标签
				http请求方式：POST（请使用https协议）
				https://api.weixin.qq.com/cgi-bin/tags/members/batchuntagging?access_token=ACCESS_TOKEN
				POST数据格式：JSON
				POST数据例子：
				{
				  "openid_list" : [//粉丝列表
				    "ocYxcuAEy30bX0NXmGn4ypqx3tI0",
				    "ocYxcuBt0mRugKZ7tGAHPnUaOW7Y"
				  ],
				  "tagid" : 134
				}
			3. 获取用户身上的标签列表
				http请求方式：POST（请使用https协议）
				https://api.weixin.qq.com/cgi-bin/tags/getidlist?access_token=ACCESS_TOKEN
				POST数据格式：JSON
				POST数据例子：
				{
				  "openid" : "ocYxcuBt0mRugKZ7tGAHPnUaOW7Y"
				}

	设置用户备注名
		http请求方式: POST（请使用https协议）
		https://api.weixin.qq.com/cgi-bin/user/info/updateremark?access_token=ACCESS_TOKEN
		POST数据格式：JSON
		POST数据例子：
		{
			"openid":"oDF3iY9ffA-hqb2vVvbr7qxf6A0Q",
			"remark":"pangzi"
		}

	获取用户基本信息(包括UnionID机制)
		http请求方式: GET 
		https://api.weixin.qq.com/cgi-bin/user/info?access_token=ACCESS_TOKEN&openid=OPENID&lang=zh_CN 

		批量获取用户基本信息
		http请求方式: POST
		https://api.weixin.qq.com/cgi-bin/user/info/batchget?access_token=ACCESS_TOKEN
		post数据
		{
		   "user_list": [
		       {
		           "openid": "otvxTs4dckWG7imySrJd6jSi0CWE", 
		           "lang": "zh-CN"
		       }, 
		       {
		           "openid": "otvxTs_JZ6SEiP0imdhpi50fuSZg", 
		           "lang": "zh-CN"
		       }
		   ]
		}

	获取用户列表（可以使用多次拉取来获得全部的用户）
		http请求方式: GET（请使用https协议）
		https://api.weixin.qq.com/cgi-bin/user/get?access_token=ACCESS_TOKEN&next_openid=NEXT_OPENID

	获取用户地理位置
		上报地理位置以推送XML数据包到开发者填写的URL来实现。

	黑名单管理
		1. 获取公众号的黑名单列表
			http请求方式：POST（请使用https协议）
			https://api.weixin.qq.com/cgi-bin/tags/members/getblacklist?access_token=ACCESS_TOKEN
			post数据：
			{
				"begin_openid":"OPENID1"
			}
		2. 拉黑用户			
			http请求方式：POST（请使用https协议）
			https://api.weixin.qq.com/cgi-bin/tags/members/batchblacklist?access_token=ACCESS_TOKEN
			post数据:
			{
			 	"opened_list":["OPENID1”,” OPENID2”]
			}
		3. 取消拉黑用户
			http请求方式：POST（请使用https协议）
			https://api.weixin.qq.com/cgi-bin/tags/members/batchunblacklist?access_token=ACCESS_TOKEN
			post数据：
			{
			 "opened_list":["OPENID1”,” OPENID2”]
			}



账号管理：
	生成带参数的二维码
		获取带参数的二维码的过程包括两步，首先创建二维码ticket，然后凭借ticket到指定URL换取二维码：
			1.创建二维码ticket
				临时二维码请求说明
					http请求方式: POST
					URL: https://api.weixin.qq.com/cgi-bin/qrcode/create?access_token=TOKENPOST		数据格式：json
					POST数据例子：{"expire_seconds": 604800, "action_name": "QR_SCENE", "action_info": {"scene": {"scene_id": 123}}}
				永久二维码请求说明
					http请求方式: POST
					URL: https://api.weixin.qq.com/cgi-bin/qrcode/create?access_token=TOKENPOST		数据格式：json
					POST数据例子：{"action_name": "QR_LIMIT_SCENE", "action_info": {"scene": {"scene_id": 123}}}
					或者也可以使用以下POST数据创建字符串形式的二维码参数：
					{"action_name": "QR_LIMIT_STR_SCENE", "action_info": {"scene": {"scene_str": "123"}}}
			2.通过ticket换取二维码
				HTTP GET请求（请使用https协议）https://mp.weixin.qq.com/cgi-bin/showqrcode?ticket=Ticket 		提醒：TICKET记得进行UrlEncode
				返回说明：ticket正确情况下，http 返回码是200，是一张图片，可以直接展示或者下载。

	长链接转短链接接口
		主要使用场景： 开发者用于生成二维码的原链接（商品、支付二维码等）太长导致扫码速度和成功率下降，将原长链接通过此接口转成短链接再生成二维码将大大提升扫码速度和成功率。
		http请求方式: POST
		https://api.weixin.qq.com/cgi-bin/shorturl?access_token=ACCESS_TOKEN
		调用举例：
		curl -d "{\"action\":\"long2short\",\"long_url\":\"http://wap.koudaitong.com/v2/showcase/goods?alias=128wi9shh&spm=h56083&redirect_count=1\"}" "https://api.weixin.qq.com/cgi-bin/shorturl?access_token=ACCESS_TOKEN"



数据统计：
	用户分析数据接口
		获取用户增减数据（getusersummary）	https://api.weixin.qq.com/datacube/getusersummary?access_token=ACCESS_TOKEN
		获取累计用户数据（getusercumulate）	https://api.weixin.qq.com/datacube/getusercumulate?access_token=ACCESS_TOKEN
		post数据：
		{ 
		    "begin_date": "2014-12-02", 
		    "end_date": "2014-12-07"
		}
