Redis在3.2版本后增加了地理位置Geo模块

用数据库来算附近的人
    地图元素的位置数据使用二维的经纬度表示，当两个元素的距离不是很远时，可以直接使用勾股定理算出元素之间的距离。

    需要注意的是，经纬度坐标的密度不一样（地球是一个椭圆），勾股定理计算平方之后再求和时，需要按一定的系数加权后再进行求和

    一般通过矩形区域来限定元素的数量，然后对区域内的元素进行全量距离计算然后排序。

    通常会对经纬度字段加一个联合索引以提高性能


GeoHash算法
    GeoHash算法是比较通用的地理位置距离排序算法，redis也使用该算法

    对于一个坐标，会编码成一个整数（通过该整数可以还原出坐标），然后放入zset中
    zset的value是元素的key，score是GeoHash的52位整数值

使用
    geoadd
    geolist // 计算两个元素之间的距离
    getpos //获取集合中任意元素的经纬度坐标
    geohash //获取元素的经纬度编码字符串
    georadiusbymember //查询指定元素附近的其他元素
    georaduis //根据坐标查询附近的元素

注意
    如果使用redis的geo数据结构，它们的数据将被全部放在一个zset集合中。
    在集群环境下，集合可能会从一个节点迁移到另一个节点，如果单个key的数据过大，会对集群的迁移工作造成较大的影响。
    因此，建议geo的数据使用单独的redis实例部署

    如果数据实在太大，就需要对geo数据进行拆分，按国家、省。。