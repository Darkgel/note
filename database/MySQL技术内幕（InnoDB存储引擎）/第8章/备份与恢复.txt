第八章 备份与恢复

8.1 备份与恢复概述
    备份的方法 :
        1. Hot Backup(热备) ： 数据库运行中直接备份，对正在运行的数据库操作没有任何的影响
        2. Cold Backup(冷备) ： 在数据库停止运行的情况备份，一般只需要复制相关的数据库物理文件即可
        3. Warm Backup(温备) ： 在数据库运行中进行备份，但是会对当前数据库的操作有所影响

    按照备份后文件的内容：
        1. 逻辑备份 ： 文件按内容可读，一般是文本文件。有SQL语句，或者是表内实际数据组成。
        2. 裸文件备份 ： 复制数据库的物理文件

    按照备份数据库的内容来分：  
        1. 完全备份
        2. 增量备份
        3. 日志备份 ： 对二进制日志的备份

    建议根据自己的备份策略编写一个备份的应用程序，这个程序可以方便地设置备份的方法及监控备份的结果，并且通过第三方接口实时地通知DBA。


8.2 冷备
    备份 ： mysql数据库地frm文件，共享表空间文件，独立表空间文件（*.ibd）,重做日志文件（ib_logfile0，ib_logfile1）

    另外建议定期备份配置文件my.cnf

    优点 ：     
        1. 备份简单，只要复制相关文件即可
        2. 备份文件易于在不同操作系统，不同Mysql版本上进行恢复
        3. 恢复相当简单，只需要把文件恢复到指定位置即可
        4. 恢复速度快，不需要执行任何SQL语句，也不需要重建索引

    缺点 ：     
        1. 冷备的文件通常比逻辑文件大很多，因为表中间中存放着很多其他数据，如undo段，插入缓冲等信息。
        2. 冷备也不总是可以轻易地跨平台。操作系统，mysql版本，文件大小写敏感和浮点数格式都会成为问题


8.3 逻辑备份
    1. mysqldump（导出的是sql语句）
    2. SELECT ... INTO OUTFILE  (导出的是文本数据，文件所在的路径的权限必须是mysql：mysql)
        SELECT [column 1], [column 2] ...
        INTO 
        OUTFILE 'file_name'
        [
            {FIELDS | COLUMNS}
            [TERMINATED BY 'string']
            [ [OPTIONALLY] ENCLOSED BY 'char' ]
            [ESCAPED BY 'char']
        ]
        [
            LINES
            [STARTING BY 'string']
            [TERMINATED BY 'string']
        ]
        FROM TABLE WHERE ...
    3. LOAD DATA INFILE
        [REPLACE | IGNORE]
        INTO TABLE table_name
        [CHARACTER SET charset_name]
        [
            {FIELDS | COLUMNS}
            [TERMINATED BY 'string']
            [[OPTIONALLY] ENCLOSED BY 'char']
            [ESCAPED BY 'char']
        ]
        [
            LINES
            [STARTING BY 'string']
            [TERMINATED BY 'string']

        ]
        [IGNORE number LINES]
        [(col_name_or_user_var,...)]
        [SET col_name= expr,...]
    4. mysqlimport
        本质上来说，是LOAD DATA INFILE的命令接口，但可以用来导入多张表


8.4 二进制日志备份与恢复
    二进制日志的作用： 
        1. 完成point-to-time的恢复工作
        2. 实现replication

    默认不启用二进制日志，配置
        [mysqld]
        log-bin=mysql-bin // 启用
        sync_binlog = 1
        innodb_support_xa = 1

    在备份二进制日志文件前，可以通过FLUSH LOGS命令来生成一个新的二进制日志文件，然后备份之前的二进制文件

    恢复二进制文件
        mysqlbinlog
        如果需要恢复多个二进制日志文件，最正确的做法应该是同时恢复多个二进制日志，而不是一个一个地恢复 
            mysqlbinlog binlog.[0-10]* | mysql -u root -p test

8.5 热备
    ibbackup
        对于InnoDB存储引擎表其备份工作原理如下：    
            1. 记录备份开始时InnoDB存储引擎重做日志文件检查点的LSN
            2. 复制共享表空间文件以及独立表空间文件
            3. 记录复制完表空间文件后，InnoDB存储引擎重做日志文件检查点的LSN
            4. 复制在备份时产生的重做日志

        备份的实质是复制数据库文件和重做日志文件

    XtraBackup
        实现ibbackup的所有功能，并且扩展支持了真正的增量备份功能


8.6 快照备份
    MySQL本身不支持快照功能，因此快照备份是指通过文件系统支持的快照功能对数据库进行备份

    备份的前提是将所有数据库文件放在同一文件分区中，然后对该分区进行快照操作。

    LVM在硬盘和分区之上建立一个逻辑层，来提高磁盘分区管理的灵活性

    快照的创建 ： 写时复制（copy-on-write）

8.7 复制
    replication的工作原理： 
        1. 主服务器（master）把数据更改记录到二进制日志（binlog）中
        2. 从服务器（slave）把主服务器的二进制日志复制到自己的中继日志（relay log）中
        3. 从服务器重做中继日志中的日志，把更改应用到自己的数据库上，以达到数据的最终一致性

        其实就是一个完全备份加上二进制日志备份的还原

    复制不是完全实时地进行同步，而是异步实时


    复制可以用来作为备份，但功能不仅仅限于备份，其主要功能如下：
        1. 数据分布。可以在不同地数据中心之间实现数据的复制
        2. 读取的负载平衡。
        3. 数据库备份
        4. 高可用性和故障转移

